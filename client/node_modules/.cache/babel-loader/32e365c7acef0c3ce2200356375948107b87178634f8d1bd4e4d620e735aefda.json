{"ast":null,"code":"var _jsxFileName = \"/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const getWeeklyReport = async () => {\n    const response = await fetch(\"/api/get_weekly_summary_report\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n  getWeeklyReport();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white-20 h-[100dvh]\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","getWeeklyReport","response","fetch","method","headers","data","json","console","log","_jsxDEV","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/App.js"],"sourcesContent":["\nfunction App() {\n  const getWeeklyReport = async() => {\n    const response = await fetch(\"/api/get_weekly_summary_report\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    \n  }\n\n  getWeeklyReport();\n  return (\n    <div className=\"bg-white-20 h-[100dvh]\">\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,GAAGA,CAAA,EAAG;EACb,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAW;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEnB,CAAC;EAEDL,eAAe,CAAC,CAAC;EACjB,oBACES,OAAA;IAAKC,SAAS,EAAC;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElC,CAAC;AAEV;AAACC,EAAA,GAnBQhB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}