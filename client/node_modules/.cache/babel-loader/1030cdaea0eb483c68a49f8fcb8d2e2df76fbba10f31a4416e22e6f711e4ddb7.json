{"ast":null,"code":"var _jsxFileName = \"/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/components/FaceMalfunctioningGraph.js\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FaceMalfunctioningGraph({\n  days\n}) {\n  _s();\n  const [selectedMalfunctioningDay, setSelectedMalfunctioningSay] = useState(Object.keys(days).length > 0 ? Object.entries(days)[0][0] : null);\n  const options = useMemo(() => {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        title: {\n          display: true,\n          text: selectedMalfunctioningDay ? selectedMalfunctioningDay : \"Chart\"\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: \"Temperatures\"\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: \"Hour\"\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          mode: \"nearest\",\n          intersect: false,\n          callbacks: {\n            label: function (context) {\n              return `${context.raw}˚`;\n            }\n          }\n        }\n      }\n    };\n  }, [selectedMalfunctioningDay]);\n  const data = useMemo(() => {\n    if (!days || !selectedMalfunctioningDay) return {\n      labels: [],\n      datasets: []\n    };\n    const hours = Object.keys(days[selectedMalfunctioningDay]);\n\n    // Map: sensorId => array of temps (aligned with `labels`)\n    const sensorMap = {};\n    for (const hour of hours) {\n      const logs = days[selectedMalfunctioningDay][hour].malfunctions;\n      for (const log of logs) {\n        const {\n          sensorId,\n          sensorAvgTemperature\n        } = log;\n        if (!sensorMap[sensorId]) {\n          // Init with nulls for previous hours\n          sensorMap[sensorId] = Array(hours.indexOf(hour)).fill(null);\n        }\n\n        // Fill gap if needed\n        const expectedLength = hours.indexOf(hour);\n        while (sensorMap[sensorId].length < expectedLength) {\n          sensorMap[sensorId].push(null); // missing data for this hour\n        }\n        sensorMap[sensorId].push(sensorAvgTemperature);\n      }\n    }\n\n    // Normalize array lengths (for Chart.js)\n    const maxLength = hours.length;\n    Object.keys(sensorMap).forEach(sensorId => {\n      while (sensorMap[sensorId].length < maxLength) {\n        sensorMap[sensorId].push(null);\n      }\n    });\n    return {\n      labels: hours,\n      datasets: Object.entries(sensorMap).map(([sensorId, temps], index) => ({\n        label: `Sensor ${sensorId}`,\n        data: temps,\n        borderColor: `hsl(${index * 60}, 70%, 50%)`,\n        backgroundColor: `hsl(${index * 60}, 70%, 70%)`\n      }))\n    };\n  }, [days, selectedMalfunctioningDay]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row flex-wrap w-[50vw] gap-x-[10px] gap-y-[10px] border-solid border-[1px] p-4\",\n      children: Object.keys(days).map((day, dayIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-10 text-white-10 p-2 rounded-md\",\n          onClick: () => setSelectedMalfunctioningSay(day),\n          children: day\n        }, dayIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[50vw] h-[40vh] border-solid border-[1px]\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        options: options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FaceMalfunctioningGraph, \"+nFKc1Atjcweio9QIDFlM5hrgBg=\");\n_c = FaceMalfunctioningGraph;\nexport default FaceMalfunctioningGraph;\nvar _c;\n$RefreshReg$(_c, \"FaceMalfunctioningGraph\");","map":{"version":3,"names":["useMemo","useState","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","FaceMalfunctioningGraph","days","_s","selectedMalfunctioningDay","setSelectedMalfunctioningSay","Object","keys","length","entries","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","x","tooltip","enabled","mode","intersect","callbacks","label","context","raw","data","labels","datasets","hours","sensorMap","hour","logs","malfunctions","log","sensorId","sensorAvgTemperature","Array","indexOf","fill","expectedLength","push","maxLength","forEach","map","temps","index","borderColor","backgroundColor","children","className","day","dayIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/components/FaceMalfunctioningGraph.js"],"sourcesContent":["import { useMemo, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction FaceMalfunctioningGraph({ days }) {\n  const [selectedMalfunctioningDay, setSelectedMalfunctioningSay] = useState(\n    Object.keys(days).length > 0 ? Object.entries(days)[0][0] : null\n  );\n\n  const options = useMemo(() => {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: \"top\",\n        },\n        title: {\n          display: true,\n          text: selectedMalfunctioningDay ? selectedMalfunctioningDay : \"Chart\",\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: \"Temperatures\",\n            },\n          },\n          x: {\n            title: {\n              display: true,\n              text: \"Hour\",\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          mode: \"nearest\",\n          intersect: false,\n          callbacks: {\n            label: function (context) {\n              return `${context.raw}˚`;\n            },\n          },\n        },\n      },\n    };\n  }, [selectedMalfunctioningDay]);\n\n\n  const data = useMemo(() => {\n    if (!days || !selectedMalfunctioningDay)\n      return { labels: [], datasets: [] };\n\n    const hours = Object.keys(days[selectedMalfunctioningDay]);\n\n    // Map: sensorId => array of temps (aligned with `labels`)\n    const sensorMap = {};\n\n    for (const hour of hours) {\n      const logs = days[selectedMalfunctioningDay][hour].malfunctions;\n\n      for (const log of logs) {\n        const { sensorId, sensorAvgTemperature } = log;\n\n        if (!sensorMap[sensorId]) {\n          // Init with nulls for previous hours\n          sensorMap[sensorId] = Array(hours.indexOf(hour)).fill(null);\n        }\n\n        // Fill gap if needed\n        const expectedLength = hours.indexOf(hour);\n        while (sensorMap[sensorId].length < expectedLength) {\n          sensorMap[sensorId].push(null); // missing data for this hour\n        }\n\n        sensorMap[sensorId].push(sensorAvgTemperature);\n      }\n    }\n\n    // Normalize array lengths (for Chart.js)\n    const maxLength = hours.length;\n    Object.keys(sensorMap).forEach((sensorId) => {\n      while (sensorMap[sensorId].length < maxLength) {\n        sensorMap[sensorId].push(null);\n      }\n    });\n\n    return {\n      labels: hours,\n      datasets: Object.entries(sensorMap).map(([sensorId, temps], index) => ({\n        label: `Sensor ${sensorId}`,\n        data: temps,\n        borderColor: `hsl(${index * 60}, 70%, 50%)`,\n        backgroundColor: `hsl(${index * 60}, 70%, 70%)`,\n      })),\n    };\n  }, [days, selectedMalfunctioningDay]);\n\n  return (\n    <>\n      <div className=\"flex flex-row flex-wrap w-[50vw] gap-x-[10px] gap-y-[10px] border-solid border-[1px] p-4\">\n        {Object.keys(days).map((day, dayIndex) => {\n          return (\n            <button\n              className=\"bg-blue-10 text-white-10 p-2 rounded-md\"\n              key={dayIndex}\n              onClick={() => setSelectedMalfunctioningSay(day)}\n            >\n              {day}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"w-[50vw] h-[40vh] border-solid border-[1px]\">\n        <Line options={options} data={data} />\n      </div>\n    </>\n  );\n}\n\nexport default FaceMalfunctioningGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}