{"ast":null,"code":"var _jsxFileName = \"/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/components/FaceMalfunctioningGraph.js\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FaceMalfunctioningGraph({\n  days\n}) {\n  _s();\n  const [selectedMalfunctioningDay, setSelectedMalfunctioningSay] = useState(Object.keys(days).length > 0 ? Object.entries(days)[0][0] : null);\n  const options = useMemo(() => {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        title: {\n          display: true,\n          text: selectedMalfunctioningDay ? selectedMalfunctioningDay : \"Chart\"\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: \"Temperatures\"\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: \"Hour\"\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          mode: \"nearest\",\n          intersect: false,\n          callbacks: {\n            label: function (context) {\n              return `${context.raw}˚`;\n            }\n          }\n        }\n      }\n    };\n  }, [selectedMalfunctioningDay]);\n  const data = useMemo(() => {\n    if (!days || !selectedMalfunctioningDay) return {\n      labels: [],\n      datasets: []\n    };\n    const hours = Object.keys(days[selectedMalfunctioningDay]);\n    const sensorMap = {};\n    const summaryTemps = [];\n    for (const hour of hours) {\n      const {\n        malfunctions,\n        summary\n      } = days[selectedMalfunctioningDay][hour];\n      summaryTemps.push((summary === null || summary === void 0 ? void 0 : summary.avgTemperature) || null);\n      for (const log of malfunctions) {\n        const {\n          sensorId,\n          sensorAvgTemperature\n        } = log;\n        if (!sensorMap[sensorId]) {\n          sensorMap[sensorId] = Array(hours.indexOf(hour)).fill(null);\n        }\n        const expectedLength = hours.indexOf(hour);\n        while (sensorMap[sensorId].length < expectedLength) {\n          sensorMap[sensorId].push(null);\n        }\n        sensorMap[sensorId].push(sensorAvgTemperature);\n      }\n    }\n    const maxLength = hours.length;\n    Object.keys(sensorMap).forEach(sensorId => {\n      while (sensorMap[sensorId].length < maxLength) {\n        sensorMap[sensorId].push(null);\n      }\n    });\n    const sensorDatasets = Object.entries(sensorMap).map(([sensorId, temps], index) => ({\n      label: `Sensor ${sensorId}`,\n      data: temps,\n      borderColor: `hsl(${index * 60}, 70%, 50%)`,\n      backgroundColor: `hsl(${index * 60}, 70%, 70%)`,\n      spanGaps: true\n    }));\n    const summaryDataset = {\n      label: \"Hourly Avg Temperature\",\n      data: summaryTemps,\n      borderColor: \"#000000\",\n      backgroundColor: \"#00000050\",\n      borderWidth: 2,\n      pointRadius: 4,\n      tension: 0.2,\n      spanGaps: true\n    };\n    return {\n      labels: hours,\n      datasets: [summaryDataset, ...sensorDatasets]\n    };\n  }, [days, selectedMalfunctioningDay]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(days).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center p-4 gap-y-4 border-solid border-[1px] w-[44vw] h-[40vh]\",\n      children: \"There is no malfunctioning notifications yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row flex-wrap w-[44vw] gap-x-[10px] gap-y-[10px] border-solid border-[1px] p-4\",\n        children: Object.keys(days).map((day, dayIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-10 text-white-10 p-2 rounded-md\",\n            onClick: () => setSelectedMalfunctioningSay(day),\n            children: day\n          }, dayIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[44vw] h-[32vh] border-solid border-[1px]\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          options: options,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(FaceMalfunctioningGraph, \"+nFKc1Atjcweio9QIDFlM5hrgBg=\");\n_c = FaceMalfunctioningGraph;\nexport default FaceMalfunctioningGraph;\nvar _c;\n$RefreshReg$(_c, \"FaceMalfunctioningGraph\");","map":{"version":3,"names":["useMemo","useState","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","FaceMalfunctioningGraph","days","_s","selectedMalfunctioningDay","setSelectedMalfunctioningSay","Object","keys","length","entries","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","x","tooltip","enabled","mode","intersect","callbacks","label","context","raw","data","labels","datasets","hours","sensorMap","summaryTemps","hour","malfunctions","summary","push","avgTemperature","log","sensorId","sensorAvgTemperature","Array","indexOf","fill","expectedLength","maxLength","forEach","sensorDatasets","map","temps","index","borderColor","backgroundColor","spanGaps","summaryDataset","borderWidth","pointRadius","tension","children","className","fileName","_jsxFileName","lineNumber","columnNumber","day","dayIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/components/FaceMalfunctioningGraph.js"],"sourcesContent":["import { useMemo, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction FaceMalfunctioningGraph({ days }) {\n  const [selectedMalfunctioningDay, setSelectedMalfunctioningSay] = useState(\n    Object.keys(days).length > 0 ? Object.entries(days)[0][0] : null\n  );\n\n  const options = useMemo(() => {\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: \"top\",\n        },\n        title: {\n          display: true,\n          text: selectedMalfunctioningDay ? selectedMalfunctioningDay : \"Chart\",\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: \"Temperatures\",\n            },\n          },\n          x: {\n            title: {\n              display: true,\n              text: \"Hour\",\n            },\n          },\n        },\n        tooltip: {\n          enabled: true,\n          mode: \"nearest\",\n          intersect: false,\n          callbacks: {\n            label: function (context) {\n              return `${context.raw}˚`;\n            },\n          },\n        },\n      },\n    };\n  }, [selectedMalfunctioningDay]);\n\n  const data = useMemo(() => {\n    if (!days || !selectedMalfunctioningDay)\n      return { labels: [], datasets: [] };\n\n    const hours = Object.keys(days[selectedMalfunctioningDay]);\n\n    const sensorMap = {};\n    const summaryTemps = [];\n    for (const hour of hours) {\n      const { malfunctions, summary } = days[selectedMalfunctioningDay][hour];\n\n      summaryTemps.push(summary?.avgTemperature || null);\n\n      for (const log of malfunctions) {\n        const { sensorId, sensorAvgTemperature } = log;\n\n        if (!sensorMap[sensorId]) {\n          sensorMap[sensorId] = Array(hours.indexOf(hour)).fill(null);\n        }\n\n        const expectedLength = hours.indexOf(hour);\n        while (sensorMap[sensorId].length < expectedLength) {\n          sensorMap[sensorId].push(null);\n        }\n\n        sensorMap[sensorId].push(sensorAvgTemperature);\n      }\n    }\n\n    const maxLength = hours.length;\n    Object.keys(sensorMap).forEach((sensorId) => {\n      while (sensorMap[sensorId].length < maxLength) {\n        sensorMap[sensorId].push(null);\n      }\n    });\n\n    const sensorDatasets = Object.entries(sensorMap).map(\n      ([sensorId, temps], index) => ({\n        label: `Sensor ${sensorId}`,\n        data: temps,\n        borderColor: `hsl(${index * 60}, 70%, 50%)`,\n        backgroundColor: `hsl(${index * 60}, 70%, 70%)`,\n        spanGaps: true,\n      })\n    );\n\n    const summaryDataset = {\n      label: \"Hourly Avg Temperature\",\n      data: summaryTemps,\n      borderColor: \"#000000\",\n      backgroundColor: \"#00000050\",\n      borderWidth: 2,\n      pointRadius: 4,\n      tension: 0.2,\n      spanGaps: true,\n    };\n\n    return {\n      labels: hours,\n      datasets: [summaryDataset, ...sensorDatasets],\n    };\n  }, [days, selectedMalfunctioningDay]);\n\n  return (\n    <>\n      {Object.keys(days).length === 0 ? (\n        <div className=\"flex flex-col items-center justify-center p-4 gap-y-4 border-solid border-[1px] w-[44vw] h-[40vh]\">\n          There is no malfunctioning notifications yet.\n        </div>\n      ) : (\n        <>\n          <div className=\"flex flex-row flex-wrap w-[44vw] gap-x-[10px] gap-y-[10px] border-solid border-[1px] p-4\">\n            {Object.keys(days).map((day, dayIndex) => {\n              return (\n                <button\n                  className=\"bg-blue-10 text-white-10 p-2 rounded-md\"\n                  key={dayIndex}\n                  onClick={() => setSelectedMalfunctioningSay(day)}\n                >\n                  {day}\n                </button>\n              );\n            })}\n          </div>\n          <div className=\"w-[44vw] h-[32vh] border-solid border-[1px]\">\n            <Line options={options} data={data} />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default FaceMalfunctioningGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}