{"ast":null,"code":"var _jsxFileName = \"/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/components/ControlPanel.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ControlPanel({\n  sensors,\n  setSensors\n}) {\n  const toggleSensorState = async sensorId => {\n    const response = await fetch(\"/api/toggle_sensor_state\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sensorId\n      })\n    });\n    const data = await response.json();\n    setSensors(data.sensors);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row flex-wrap justify-center gap-10\",\n    children: sensors.map(face => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center p-4 gap-y-4 border-solid border-[1px] w-[40vw] max-h[300px] overflow-hidden overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: face.face.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row flex-wrap gap-2\",\n          children: face.sensors.map(sensor => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `flex flex-col items-center justify-center w-[50px] aspect-square border-[2px] border-solid text-white-0 ${sensor.enabled ? \"bg-green-enabled\" : \"bg-red-disabled\"}`,\n              onClick: () => toggleSensorState(sensor.id),\n              children: sensor.id\n            }, sensor.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, face.face, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = ControlPanel;\nexport default ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["ControlPanel","sensors","setSensors","toggleSensorState","sensorId","response","fetch","method","headers","body","JSON","stringify","data","json","_jsxDEV","className","children","map","face","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","sensor","enabled","onClick","id","_c","$RefreshReg$"],"sources":["/Users/maorbarasher/Documents/GitHub/OMC-Developer-Challenge/client/src/components/ControlPanel.js"],"sourcesContent":["function ControlPanel({ sensors, setSensors }) {\n  \n  const toggleSensorState = async (sensorId) => {\n    const response = await fetch(\n      \"/api/toggle_sensor_state\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ sensorId })\n      }\n    );\n    const data = await response.json();\n    setSensors(data.sensors);\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap justify-center gap-10\">\n      {sensors.map((face) => {\n        return (\n          <div\n            key={face.face}\n            className=\"flex flex-col items-center p-4 gap-y-4 border-solid border-[1px] w-[40vw] max-h[300px] overflow-hidden overflow-y-auto\"\n          >\n            <div>{face.face.toUpperCase()}</div>\n            <div className=\"flex flex-row flex-wrap gap-2\">\n              {face.sensors.map((sensor) => {\n                return (\n                  <button\n                    key={sensor.id}\n                    className={`flex flex-col items-center justify-center w-[50px] aspect-square border-[2px] border-solid text-white-0 ${\n                      sensor.enabled ? \"bg-green-enabled\" : \"bg-red-disabled\"\n                    }`}\n                    onClick={() => toggleSensorState(sensor.id)}\n                  >\n                    {sensor.id}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ControlPanel;\n"],"mappings":";;AAAA,SAASA,YAAYA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EAE7C,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;IAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0BAA0B,EAC1B;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAS,CAAC;IACnC,CACF,CAAC;IACD,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCX,UAAU,CAACU,IAAI,CAACX,OAAO,CAAC;EAC1B,CAAC;EAED,oBACEa,OAAA;IAAKC,SAAS,EAAC,+CAA+C;IAAAC,QAAA,EAC3Df,OAAO,CAACgB,GAAG,CAAEC,IAAI,IAAK;MACrB,oBACEJ,OAAA;QAEEC,SAAS,EAAC,wHAAwH;QAAAC,QAAA,gBAElIF,OAAA;UAAAE,QAAA,EAAME,IAAI,CAACA,IAAI,CAACC,WAAW,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpCT,OAAA;UAAKC,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAC3CE,IAAI,CAACjB,OAAO,CAACgB,GAAG,CAAEO,MAAM,IAAK;YAC5B,oBACEV,OAAA;cAEEC,SAAS,EAAE,2GACTS,MAAM,CAACC,OAAO,GAAG,kBAAkB,GAAG,iBAAiB,EACtD;cACHC,OAAO,EAAEA,CAAA,KAAMvB,iBAAiB,CAACqB,MAAM,CAACG,EAAE,CAAE;cAAAX,QAAA,EAE3CQ,MAAM,CAACG;YAAE,GANLH,MAAM,CAACG,EAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOR,CAAC;UAEb,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAlBDL,IAAI,CAACA,IAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBX,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACK,EAAA,GA9CQ5B,YAAY;AAgDrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}